{"ast":null,"code":"import React__default, { isValidElement, useRef, useLayoutEffect, useEffect, useReducer, useState, cloneElement, createElement } from 'react';\nimport cx from 'clsx';\nimport { render } from 'react-dom';\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction isNum(v) {\n  return typeof v === 'number' && !isNaN(v);\n}\nfunction isBool(v) {\n  return typeof v === 'boolean';\n}\nfunction isStr(v) {\n  return typeof v === 'string';\n}\nfunction isFn(v) {\n  return typeof v === 'function';\n}\nfunction parseClassName(v) {\n  return isStr(v) || isFn(v) ? v : null;\n}\nfunction isToastIdValid(toastId) {\n  return toastId === 0 || toastId;\n}\nfunction getAutoCloseDelay(toastAutoClose, containerAutoClose) {\n  return toastAutoClose === false || isNum(toastAutoClose) && toastAutoClose > 0 ? toastAutoClose : containerAutoClose;\n}\nvar canUseDom = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nfunction canBeRendered(content) {\n  return isValidElement(content) || isStr(content) || isFn(content) || isNum(content);\n}\nvar POSITION = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\nvar TYPE = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default'\n};\n\n/**\r\n * Used to collapse toast after exit animation\r\n */\nfunction collapseToast(node, done, duration\n/* COLLAPSE_DURATION */) {\n  if (duration === void 0) {\n    duration = 300;\n  }\n  var scrollHeight = node.scrollHeight,\n    style = node.style;\n  requestAnimationFrame(function () {\n    style.minHeight = 'initial';\n    style.height = scrollHeight + 'px';\n    style.transition = \"all \" + duration + \"ms\";\n    requestAnimationFrame(function () {\n      style.height = '0';\n      style.padding = '0';\n      style.margin = '0';\n      setTimeout(done, duration);\n    });\n  });\n}\n\n/**\r\n * Css animation that just work.\r\n * You could use animate.css for instance\r\n *\r\n *\r\n * ```\r\n * cssTransition({\r\n *   enter: \"animate__animated animate__bounceIn\",\r\n *   exit: \"animate__animated animate__bounceOut\"\r\n * })\r\n * ```\r\n *\r\n */\n\nfunction cssTransition(_ref) {\n  var enter = _ref.enter,\n    exit = _ref.exit,\n    _ref$appendPosition = _ref.appendPosition,\n    appendPosition = _ref$appendPosition === void 0 ? false : _ref$appendPosition,\n    _ref$collapse = _ref.collapse,\n    collapse = _ref$collapse === void 0 ? true : _ref$collapse,\n    _ref$collapseDuration = _ref.collapseDuration,\n    collapseDuration = _ref$collapseDuration === void 0 ? 300 : _ref$collapseDuration;\n  return function ToastTransition(_ref2) {\n    var children = _ref2.children,\n      position = _ref2.position,\n      preventExitTransition = _ref2.preventExitTransition,\n      done = _ref2.done,\n      nodeRef = _ref2.nodeRef,\n      isIn = _ref2.isIn;\n    var enterClassName = appendPosition ? enter + \"--\" + position : enter;\n    var exitClassName = appendPosition ? exit + \"--\" + position : exit;\n    var baseClassName = useRef();\n    var animationStep = useRef(0\n    /* Enter */);\n\n    useLayoutEffect(function () {\n      onEnter();\n    }, []);\n    useEffect(function () {\n      if (!isIn) preventExitTransition ? onExited() : onExit();\n    }, [isIn]);\n    function onEnter() {\n      var node = nodeRef.current;\n      baseClassName.current = node.className;\n      node.className += \" \" + enterClassName;\n      node.addEventListener('animationend', onEntered);\n      node.addEventListener('animationcancel', onEntered);\n    }\n    function onEntered(e) {\n      if (e.target !== nodeRef.current) return;\n      var node = nodeRef.current;\n      node.dispatchEvent(new Event(\"d\"\n      /* ENTRANCE_ANIMATION_END */));\n\n      node.removeEventListener('animationend', onEntered);\n      node.removeEventListener('animationcancel', onEntered);\n      if (animationStep.current === 0\n      /* Enter */) {\n        node.className = baseClassName.current;\n      }\n    }\n    function onExit() {\n      animationStep.current = 1\n      /* Exit */;\n\n      var node = nodeRef.current;\n      node.className += \" \" + exitClassName;\n      node.addEventListener('animationend', onExited);\n    }\n    function onExited() {\n      var node = nodeRef.current;\n      node.removeEventListener('animationend', onExited);\n      collapse ? collapseToast(node, done, collapseDuration) : done();\n    }\n    return React__default.createElement(React__default.Fragment, null, children);\n  };\n}\nvar eventManager = {\n  list: /*#__PURE__*/new Map(),\n  emitQueue: /*#__PURE__*/new Map(),\n  on: function on(event, callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event).push(callback);\n    return this;\n  },\n  off: function off(event, callback) {\n    if (callback) {\n      var cb = this.list.get(event).filter(function (cb) {\n        return cb !== callback;\n      });\n      this.list.set(event, cb);\n      return this;\n    }\n    this.list[\"delete\"](event);\n    return this;\n  },\n  cancelEmit: function cancelEmit(event) {\n    var timers = this.emitQueue.get(event);\n    if (timers) {\n      timers.forEach(clearTimeout);\n      this.emitQueue[\"delete\"](event);\n    }\n    return this;\n  },\n  /**\r\n   * Enqueue the event at the end of the call stack\r\n   * Doing so let the user call toast as follow:\r\n   * toast('1')\r\n   * toast('2')\r\n   * toast('3')\r\n   * Without setTimemout the code above will not work\r\n   */\n  emit: function emit(event) {\n    var _this = this;\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    this.list.has(event) && this.list.get(event).forEach(function (callback) {\n      var timer = setTimeout(function () {\n        // @ts-ignore\n        callback.apply(void 0, args);\n      }, 0);\n      _this.emitQueue.has(event) || _this.emitQueue.set(event, []);\n      _this.emitQueue.get(event).push(timer);\n    });\n  }\n};\nvar _excluded = [\"delay\", \"staleId\"];\nfunction useToastContainer(props) {\n  var _useReducer = useReducer(function (x) {\n      return x + 1;\n    }, 0),\n    forceUpdate = _useReducer[1];\n  var _useState = useState([]),\n    toastIds = _useState[0],\n    setToastIds = _useState[1];\n  var containerRef = useRef(null);\n  var toastToRender = useRef(new Map()).current;\n  var isToastActive = function isToastActive(id) {\n    return toastIds.indexOf(id) !== -1;\n  };\n  var instance = useRef({\n    toastKey: 1,\n    displayedToast: 0,\n    count: 0,\n    queue: [],\n    props: props,\n    containerId: null,\n    isToastActive: isToastActive,\n    getToast: function getToast(id) {\n      return toastToRender.get(id);\n    }\n  }).current;\n  useEffect(function () {\n    instance.containerId = props.containerId;\n    eventManager.cancelEmit(3\n    /* WillUnmount */).on(0\n    /* Show */, buildToast).on(1\n    /* Clear */, function (toastId) {\n      return containerRef.current && removeToast(toastId);\n    }).on(5\n    /* ClearWaitingQueue */, clearWaitingQueue).emit(2\n    /* DidMount */, instance);\n    return function () {\n      return eventManager.emit(3\n      /* WillUnmount */, instance);\n    };\n  }, []);\n  useEffect(function () {\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toastIds.length;\n    eventManager.emit(4\n    /* Change */, toastIds.length, props.containerId);\n  }, [toastIds]);\n  useEffect(function () {\n    instance.props = props;\n  });\n  function clearWaitingQueue(_ref) {\n    var containerId = _ref.containerId;\n    var limit = instance.props.limit;\n    if (limit && (!containerId || instance.containerId === containerId)) {\n      instance.count -= instance.queue.length;\n      instance.queue = [];\n    }\n  }\n  function removeToast(toastId) {\n    setToastIds(function (state) {\n      return isToastIdValid(toastId) ? state.filter(function (id) {\n        return id !== toastId;\n      }) : [];\n    });\n  }\n  function dequeueToast() {\n    var _instance$queue$shift = instance.queue.shift(),\n      toastContent = _instance$queue$shift.toastContent,\n      toastProps = _instance$queue$shift.toastProps,\n      staleId = _instance$queue$shift.staleId;\n    appendToast(toastContent, toastProps, staleId);\n  }\n  /**\r\n   * check if a container is attached to the dom\r\n   * check for multi-container, build only if associated\r\n   * check for duplicate toastId if no update\r\n   */\n\n  function isNotValid(options) {\n    return !containerRef.current || instance.props.enableMultiContainer && options.containerId !== instance.props.containerId || toastToRender.has(options.toastId) && options.updateId == null;\n  } // this function and all the function called inside needs to rely on refs\n\n  function buildToast(content, _ref2) {\n    var delay = _ref2.delay,\n      staleId = _ref2.staleId,\n      options = _objectWithoutPropertiesLoose(_ref2, _excluded);\n    if (!canBeRendered(content) || isNotValid(options)) return;\n    var toastId = options.toastId,\n      updateId = options.updateId,\n      data = options.data;\n    var props = instance.props;\n    var closeToast = function closeToast() {\n      return removeToast(toastId);\n    };\n    var isNotAnUpdate = updateId == null;\n    if (isNotAnUpdate) instance.count++;\n    var toastProps = {\n      toastId: toastId,\n      updateId: updateId,\n      isLoading: options.isLoading,\n      theme: options.theme || props.theme,\n      icon: options.icon != null ? options.icon : props.icon,\n      isIn: false,\n      key: options.key || instance.toastKey++,\n      type: options.type,\n      closeToast: closeToast,\n      closeButton: options.closeButton,\n      rtl: props.rtl,\n      position: options.position || props.position,\n      transition: options.transition || props.transition,\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(options.bodyClassName || props.bodyClassName),\n      style: options.style || props.toastStyle,\n      bodyStyle: options.bodyStyle || props.bodyStyle,\n      onClick: options.onClick || props.onClick,\n      pauseOnHover: isBool(options.pauseOnHover) ? options.pauseOnHover : props.pauseOnHover,\n      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss) ? options.pauseOnFocusLoss : props.pauseOnFocusLoss,\n      draggable: isBool(options.draggable) ? options.draggable : props.draggable,\n      draggablePercent: options.draggablePercent || props.draggablePercent,\n      draggableDirection: options.draggableDirection || props.draggableDirection,\n      closeOnClick: isBool(options.closeOnClick) ? options.closeOnClick : props.closeOnClick,\n      progressClassName: parseClassName(options.progressClassName || props.progressClassName),\n      progressStyle: options.progressStyle || props.progressStyle,\n      autoClose: options.isLoading ? false : getAutoCloseDelay(options.autoClose, props.autoClose),\n      hideProgressBar: isBool(options.hideProgressBar) ? options.hideProgressBar : props.hideProgressBar,\n      progress: options.progress,\n      role: options.role || props.role,\n      deleteToast: function deleteToast() {\n        toastToRender[\"delete\"](toastId);\n        var queueLen = instance.queue.length;\n        instance.count = isToastIdValid(toastId) ? instance.count - 1 : instance.count - instance.displayedToast;\n        if (instance.count < 0) instance.count = 0;\n        if (queueLen > 0) {\n          var freeSlot = isToastIdValid(toastId) ? 1 : instance.props.limit;\n          if (queueLen === 1 || freeSlot === 1) {\n            instance.displayedToast++;\n            dequeueToast();\n          } else {\n            var toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n            instance.displayedToast = toDequeue;\n            for (var i = 0; i < toDequeue; i++) {\n              dequeueToast();\n            }\n          }\n        } else {\n          forceUpdate();\n        }\n      }\n    };\n    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastProps.onClose = options.onClose;\n    toastProps.closeButton = props.closeButton;\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      toastProps.closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      toastProps.closeButton = canBeRendered(props.closeButton) ? props.closeButton : true;\n    }\n    var toastContent = content;\n    if (isValidElement(content) && !isStr(content.type)) {\n      toastContent = cloneElement(content, {\n        closeToast: closeToast,\n        toastProps: toastProps,\n        data: data\n      });\n    } else if (isFn(content)) {\n      toastContent = content({\n        closeToast: closeToast,\n        toastProps: toastProps,\n        data: data\n      });\n    } // not handling limit + delay by design. Waiting for user feedback first\n\n    if (props.limit && props.limit > 0 && instance.count > props.limit && isNotAnUpdate) {\n      instance.queue.push({\n        toastContent: toastContent,\n        toastProps: toastProps,\n        staleId: staleId\n      });\n    } else if (isNum(delay) && delay > 0) {\n      setTimeout(function () {\n        appendToast(toastContent, toastProps, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastProps, staleId);\n    }\n  }\n  function appendToast(content, toastProps, staleId) {\n    var toastId = toastProps.toastId;\n    if (staleId) toastToRender[\"delete\"](staleId);\n    toastToRender.set(toastId, {\n      content: content,\n      props: toastProps\n    });\n    setToastIds(function (state) {\n      return [].concat(state, [toastId]).filter(function (id) {\n        return id !== staleId;\n      });\n    });\n  }\n  function getToastToRender(cb) {\n    var toRender = new Map();\n    var collection = Array.from(toastToRender.values());\n    if (props.newestOnTop) collection.reverse();\n    collection.forEach(function (toast) {\n      var position = toast.props.position;\n      toRender.has(position) || toRender.set(position, []);\n      toRender.get(position).push(toast);\n    });\n    return Array.from(toRender, function (p) {\n      return cb(p[0], p[1]);\n    });\n  }\n  return {\n    getToastToRender: getToastToRender,\n    containerRef: containerRef,\n    isToastActive: isToastActive\n  };\n}\nfunction getX(e) {\n  return e.targetTouches && e.targetTouches.length >= 1 ? e.targetTouches[0].clientX : e.clientX;\n}\nfunction getY(e) {\n  return e.targetTouches && e.targetTouches.length >= 1 ? e.targetTouches[0].clientY : e.clientY;\n}\nfunction useToast(props) {\n  var _useState = useState(false),\n    isRunning = _useState[0],\n    setIsRunning = _useState[1];\n  var _useState2 = useState(false),\n    preventExitTransition = _useState2[0],\n    setPreventExitTransition = _useState2[1];\n  var toastRef = useRef(null);\n  var drag = useRef({\n    start: 0,\n    x: 0,\n    y: 0,\n    delta: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null,\n    didMove: false\n  }).current;\n  var syncProps = useRef(props);\n  var autoClose = props.autoClose,\n    pauseOnHover = props.pauseOnHover,\n    closeToast = props.closeToast,\n    onClick = props.onClick,\n    closeOnClick = props.closeOnClick;\n  useEffect(function () {\n    syncProps.current = props;\n  });\n  useEffect(function () {\n    if (toastRef.current) toastRef.current.addEventListener(\"d\"\n    /* ENTRANCE_ANIMATION_END */, playToast, {\n      once: true\n    });\n    if (isFn(props.onOpen)) props.onOpen(isValidElement(props.children) && props.children.props);\n    return function () {\n      var props = syncProps.current;\n      if (isFn(props.onClose)) props.onClose(isValidElement(props.children) && props.children.props);\n    };\n  }, []);\n  useEffect(function () {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return function () {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n  function onDragStart(e) {\n    if (props.draggable) {\n      bindDragEvents();\n      var toast = toastRef.current;\n      drag.canCloseOnClick = true;\n      drag.canDrag = true;\n      drag.boundingRect = toast.getBoundingClientRect();\n      toast.style.transition = '';\n      drag.x = getX(e.nativeEvent);\n      drag.y = getY(e.nativeEvent);\n      if (props.draggableDirection === \"x\"\n      /* X */) {\n        drag.start = drag.x;\n        drag.removalDistance = toast.offsetWidth * (props.draggablePercent / 100);\n      } else {\n        drag.start = drag.y;\n        drag.removalDistance = toast.offsetHeight * (props.draggablePercent === 80\n        /* DRAGGABLE_PERCENT */ ? props.draggablePercent * 1.5 : props.draggablePercent / 100);\n      }\n    }\n  }\n  function onDragTransitionEnd() {\n    if (drag.boundingRect) {\n      var _drag$boundingRect = drag.boundingRect,\n        top = _drag$boundingRect.top,\n        bottom = _drag$boundingRect.bottom,\n        left = _drag$boundingRect.left,\n        right = _drag$boundingRect.right;\n      if (props.pauseOnHover && drag.x >= left && drag.x <= right && drag.y >= top && drag.y <= bottom) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n  function playToast() {\n    setIsRunning(true);\n  }\n  function pauseToast() {\n    setIsRunning(false);\n  }\n  function bindFocusEvents() {\n    if (!document.hasFocus()) pauseToast();\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n  function bindDragEvents() {\n    drag.didMove = false;\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n  function onDragMove(e) {\n    var toast = toastRef.current;\n    if (drag.canDrag && toast) {\n      drag.didMove = true;\n      if (isRunning) pauseToast();\n      drag.x = getX(e);\n      drag.y = getY(e);\n      if (props.draggableDirection === \"x\"\n      /* X */) {\n        drag.delta = drag.x - drag.start;\n      } else {\n        drag.delta = drag.y - drag.start;\n      } // prevent false positif during a toast click\n\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n      toast.style.transform = \"translate\" + props.draggableDirection + \"(\" + drag.delta + \"px)\";\n      toast.style.opacity = \"\" + (1 - Math.abs(drag.delta / drag.removalDistance));\n    }\n  }\n  function onDragEnd() {\n    unbindDragEvents();\n    var toast = toastRef.current;\n    if (drag.canDrag && drag.didMove && toast) {\n      drag.canDrag = false;\n      if (Math.abs(drag.delta) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = \"translate\" + props.draggableDirection + \"(0)\";\n      toast.style.opacity = '1';\n    }\n  }\n  var eventHandlers = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  } // prevent toast from closing when user drags the toast\n\n  if (closeOnClick) {\n    eventHandlers.onClick = function (e) {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n  return {\n    playToast: playToast,\n    pauseToast: pauseToast,\n    isRunning: isRunning,\n    preventExitTransition: preventExitTransition,\n    toastRef: toastRef,\n    eventHandlers: eventHandlers\n  };\n}\nfunction CloseButton(_ref) {\n  var closeToast = _ref.closeToast,\n    theme = _ref.theme,\n    _ref$ariaLabel = _ref.ariaLabel,\n    ariaLabel = _ref$ariaLabel === void 0 ? 'close' : _ref$ariaLabel;\n  return createElement(\"button\", {\n    className: \"Toastify\"\n    /* CSS_NAMESPACE */ + \"__close-button \" + \"Toastify\"\n    /* CSS_NAMESPACE */ + \"__close-button--\" + theme,\n    type: \"button\",\n    onClick: function onClick(e) {\n      e.stopPropagation();\n      closeToast(e);\n    },\n    \"aria-label\": ariaLabel\n  }, createElement(\"svg\", {\n    \"aria-hidden\": \"true\",\n    viewBox: \"0 0 14 16\"\n  }, createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n  })));\n}\nfunction ProgressBar(_ref) {\n  var _cx, _animationEvent;\n  var delay = _ref.delay,\n    isRunning = _ref.isRunning,\n    closeToast = _ref.closeToast,\n    type = _ref.type,\n    hide = _ref.hide,\n    className = _ref.className,\n    userStyle = _ref.style,\n    controlledProgress = _ref.controlledProgress,\n    progress = _ref.progress,\n    rtl = _ref.rtl,\n    isIn = _ref.isIn,\n    theme = _ref.theme;\n  var style = _extends({}, userStyle, {\n    animationDuration: delay + \"ms\",\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: hide ? 0 : 1\n  });\n  if (controlledProgress) style.transform = \"scaleX(\" + progress + \")\";\n  var defaultClassName = cx(\"Toastify\"\n  /* CSS_NAMESPACE */ + \"__progress-bar\", controlledProgress ? \"Toastify\"\n  /* CSS_NAMESPACE */ + \"__progress-bar--controlled\" : \"Toastify\"\n  /* CSS_NAMESPACE */ + \"__progress-bar--animated\", \"Toastify\"\n  /* CSS_NAMESPACE */ + \"__progress-bar-theme--\" + theme, \"Toastify\"\n  /* CSS_NAMESPACE */ + \"__progress-bar--\" + type, (_cx = {}, _cx[\"Toastify\"\n  /* CSS_NAMESPACE */ + \"__progress-bar--rtl\"] = rtl, _cx));\n  var classNames = isFn(className) ? className({\n    rtl: rtl,\n    type: type,\n    defaultClassName: defaultClassName\n  }) : cx(defaultClassName, className); // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n\n  var animationEvent = (_animationEvent = {}, _animationEvent[controlledProgress && progress >= 1 ? 'onTransitionEnd' : 'onAnimationEnd'] = controlledProgress && progress < 1 ? null : function () {\n    isIn && closeToast();\n  }, _animationEvent); // TODO: add aria-valuenow, aria-valuemax, aria-valuemin\n\n  return createElement(\"div\", Object.assign({\n    role: \"progressbar\",\n    \"aria-hidden\": hide ? 'true' : 'false',\n    \"aria-label\": \"notification timer\",\n    className: classNames,\n    style: style\n  }, animationEvent));\n}\nProgressBar.defaultProps = {\n  type: TYPE.DEFAULT,\n  hide: false\n};\nvar _excluded$1 = [\"theme\", \"type\"];\nvar Svg = function Svg(_ref) {\n  var theme = _ref.theme,\n    type = _ref.type,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded$1);\n  return createElement(\"svg\", Object.assign({\n    viewBox: \"0 0 24 24\",\n    width: \"100%\",\n    height: \"100%\",\n    fill: theme === 'colored' ? 'currentColor' : \"var(--toastify-icon-color-\" + type + \")\"\n  }, rest));\n};\nfunction Warning(props) {\n  return createElement(Svg, Object.assign({}, props), createElement(\"path\", {\n    d: \"M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z\"\n  }));\n}\nfunction Info(props) {\n  return createElement(Svg, Object.assign({}, props), createElement(\"path\", {\n    d: \"M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z\"\n  }));\n}\nfunction Success(props) {\n  return createElement(Svg, Object.assign({}, props), createElement(\"path\", {\n    d: \"M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z\"\n  }));\n}\nfunction Error(props) {\n  return createElement(Svg, Object.assign({}, props), createElement(\"path\", {\n    d: \"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\"\n  }));\n}\nfunction Spinner() {\n  return createElement(\"div\", {\n    className: \"Toastify\"\n    /* CSS_NAMESPACE */ + \"__spinner\"\n  });\n}\nvar Icons = {\n  info: Info,\n  warning: Warning,\n  success: Success,\n  error: Error,\n  spinner: Spinner\n};\nvar Toast = function Toast(props) {\n  var _cx, _cx2;\n  var _useToast = useToast(props),\n    isRunning = _useToast.isRunning,\n    preventExitTransition = _useToast.preventExitTransition,\n    toastRef = _useToast.toastRef,\n    eventHandlers = _useToast.eventHandlers;\n  var closeButton = props.closeButton,\n    children = props.children,\n    autoClose = props.autoClose,\n    onClick = props.onClick,\n    type = props.type,\n    hideProgressBar = props.hideProgressBar,\n    closeToast = props.closeToast,\n    Transition = props.transition,\n    position = props.position,\n    className = props.className,\n    style = props.style,\n    bodyClassName = props.bodyClassName,\n    bodyStyle = props.bodyStyle,\n    progressClassName = props.progressClassName,\n    progressStyle = props.progressStyle,\n    updateId = props.updateId,\n    role = props.role,\n    progress = props.progress,\n    rtl = props.rtl,\n    toastId = props.toastId,\n    deleteToast = props.deleteToast,\n    isIn = props.isIn,\n    isLoading = props.isLoading,\n    icon = props.icon,\n    theme = props.theme;\n  var defaultClassName = cx(\"Toastify\"\n  /* CSS_NAMESPACE */ + \"__toast\", \"Toastify\"\n  /* CSS_NAMESPACE */ + \"__toast-theme--\" + theme, \"Toastify\"\n  /* CSS_NAMESPACE */ + \"__toast--\" + type, (_cx = {}, _cx[\"Toastify\"\n  /* CSS_NAMESPACE */ + \"__toast--rtl\"] = rtl, _cx));\n  var cssClasses = isFn(className) ? className({\n    rtl: rtl,\n    position: position,\n    type: type,\n    defaultClassName: defaultClassName\n  }) : cx(defaultClassName, className);\n  var isProgressControlled = !!progress;\n  var maybeIcon = Icons[type];\n  var iconProps = {\n    theme: theme,\n    type: type\n  };\n  var Icon = maybeIcon && maybeIcon(iconProps);\n  if (icon === false) {\n    Icon = void 0;\n  } else if (isFn(icon)) {\n    Icon = icon(iconProps);\n  } else if (isValidElement(icon)) {\n    Icon = cloneElement(icon, iconProps);\n  } else if (isStr(icon)) {\n    Icon = icon;\n  } else if (isLoading) {\n    Icon = Icons.spinner();\n  }\n  function renderCloseButton(closeButton) {\n    if (!closeButton) return;\n    var props = {\n      closeToast: closeToast,\n      type: type,\n      theme: theme\n    };\n    if (isFn(closeButton)) return closeButton(props);\n    if (isValidElement(closeButton)) return cloneElement(closeButton, props);\n  }\n  return createElement(Transition, {\n    isIn: isIn,\n    done: deleteToast,\n    position: position,\n    preventExitTransition: preventExitTransition,\n    nodeRef: toastRef\n  }, createElement(\"div\", Object.assign({\n    id: toastId,\n    onClick: onClick,\n    className: cssClasses\n  }, eventHandlers, {\n    style: style,\n    ref: toastRef\n  }), createElement(\"div\", Object.assign({}, isIn && {\n    role: role\n  }, {\n    className: isFn(bodyClassName) ? bodyClassName({\n      type: type\n    }) : cx(\"Toastify\"\n    /* CSS_NAMESPACE */ + \"__toast-body\", bodyClassName),\n    style: bodyStyle\n  }), Icon && createElement(\"div\", {\n    className: cx(\"Toastify\"\n    /* CSS_NAMESPACE */ + \"__toast-icon\", (_cx2 = {}, _cx2[\"Toastify\"\n    /* CSS_NAMESPACE */ + \"--animate-icon \" + \"Toastify\"\n    /* CSS_NAMESPACE */ + \"__zoom-enter\"] = !isLoading, _cx2))\n  }, Icon), createElement(\"div\", null, children)), renderCloseButton(closeButton), (autoClose || isProgressControlled) && createElement(ProgressBar, Object.assign({}, updateId && !isProgressControlled ? {\n    key: \"pb-\" + updateId\n  } : {}, {\n    rtl: rtl,\n    theme: theme,\n    delay: autoClose,\n    isRunning: isRunning,\n    isIn: isIn,\n    closeToast: closeToast,\n    hide: hideProgressBar,\n    type: type,\n    style: progressStyle,\n    className: progressClassName,\n    controlledProgress: isProgressControlled,\n    progress: progress\n  }))));\n};\nvar Bounce = /*#__PURE__*/cssTransition({\n  enter: \"Toastify\"\n  /* CSS_NAMESPACE */ + \"--animate \" + \"Toastify\"\n  /* CSS_NAMESPACE */ + \"__bounce-enter\",\n  exit: \"Toastify\"\n  /* CSS_NAMESPACE */ + \"--animate \" + \"Toastify\"\n  /* CSS_NAMESPACE */ + \"__bounce-exit\",\n  appendPosition: true\n});\nvar Slide = /*#__PURE__*/cssTransition({\n  enter: \"Toastify\"\n  /* CSS_NAMESPACE */ + \"--animate \" + \"Toastify\"\n  /* CSS_NAMESPACE */ + \"__slide-enter\",\n  exit: \"Toastify\"\n  /* CSS_NAMESPACE */ + \"--animate \" + \"Toastify\"\n  /* CSS_NAMESPACE */ + \"__slide-exit\",\n  appendPosition: true\n});\nvar Zoom = /*#__PURE__*/cssTransition({\n  enter: \"Toastify\"\n  /* CSS_NAMESPACE */ + \"--animate \" + \"Toastify\"\n  /* CSS_NAMESPACE */ + \"__zoom-enter\",\n  exit: \"Toastify\"\n  /* CSS_NAMESPACE */ + \"--animate \" + \"Toastify\"\n  /* CSS_NAMESPACE */ + \"__zoom-exit\"\n});\nvar Flip = /*#__PURE__*/cssTransition({\n  enter: \"Toastify\"\n  /* CSS_NAMESPACE */ + \"--animate \" + \"Toastify\"\n  /* CSS_NAMESPACE */ + \"__flip-enter\",\n  exit: \"Toastify\"\n  /* CSS_NAMESPACE */ + \"--animate \" + \"Toastify\"\n  /* CSS_NAMESPACE */ + \"__flip-exit\"\n});\nvar ToastContainer = function ToastContainer(props) {\n  var _useToastContainer = useToastContainer(props),\n    getToastToRender = _useToastContainer.getToastToRender,\n    containerRef = _useToastContainer.containerRef,\n    isToastActive = _useToastContainer.isToastActive;\n  var className = props.className,\n    style = props.style,\n    rtl = props.rtl,\n    containerId = props.containerId;\n  function getClassName(position) {\n    var _cx;\n    var defaultClassName = cx(\"Toastify\"\n    /* CSS_NAMESPACE */ + \"__toast-container\", \"Toastify\"\n    /* CSS_NAMESPACE */ + \"__toast-container--\" + position, (_cx = {}, _cx[\"Toastify\"\n    /* CSS_NAMESPACE */ + \"__toast-container--rtl\"] = rtl, _cx));\n    return isFn(className) ? className({\n      position: position,\n      rtl: rtl,\n      defaultClassName: defaultClassName\n    }) : cx(defaultClassName, parseClassName(className));\n  }\n  return createElement(\"div\", {\n    ref: containerRef,\n    className: \"Toastify\"\n    /* CSS_NAMESPACE */,\n\n    id: containerId\n  }, getToastToRender(function (position, toastList) {\n    var containerStyle = !toastList.length ? _extends({}, style, {\n      pointerEvents: 'none'\n    }) : _extends({}, style);\n    return createElement(\"div\", {\n      className: getClassName(position),\n      style: containerStyle,\n      key: \"container-\" + position\n    }, toastList.map(function (_ref) {\n      var content = _ref.content,\n        toastProps = _ref.props;\n      return createElement(Toast, Object.assign({}, toastProps, {\n        isIn: isToastActive(toastProps.toastId),\n        key: \"toast-\" + toastProps.key,\n        closeButton: toastProps.closeButton === true ? CloseButton : toastProps.closeButton\n      }), content);\n    }));\n  }));\n};\nToastContainer.defaultProps = {\n  position: POSITION.TOP_RIGHT,\n  transition: Bounce,\n  rtl: false,\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  newestOnTop: false,\n  draggable: true,\n  draggablePercent: 80\n  /* DRAGGABLE_PERCENT */,\n\n  draggableDirection: \"x\"\n  /* X */,\n\n  role: 'alert',\n  theme: 'light'\n};\nvar containers = /*#__PURE__*/new Map();\nvar latestInstance;\nvar containerDomNode;\nvar containerConfig;\nvar queue = [];\nvar lazy = false;\n/**\r\n * Get the toast by id, given it's in the DOM, otherwise returns null\r\n */\n\nfunction getToast(toastId, _ref) {\n  var containerId = _ref.containerId;\n  var container = containers.get(containerId || latestInstance);\n  if (!container) return null;\n  return container.getToast(toastId);\n}\n/**\r\n * Generate a random toastId\r\n */\n\nfunction generateToastId() {\n  return Math.random().toString(36).substring(2, 9);\n}\n/**\r\n * Generate a toastId or use the one provided\r\n */\n\nfunction getToastId(options) {\n  if (options && (isStr(options.toastId) || isNum(options.toastId))) {\n    return options.toastId;\n  }\n  return generateToastId();\n}\n/**\r\n * If the container is not mounted, the toast is enqueued and\r\n * the container lazy mounted\r\n */\n\nfunction dispatchToast(content, options) {\n  if (containers.size > 0) {\n    eventManager.emit(0\n    /* Show */, content, options);\n  } else {\n    queue.push({\n      content: content,\n      options: options\n    });\n    if (lazy && canUseDom) {\n      lazy = false;\n      containerDomNode = document.createElement('div');\n      document.body.appendChild(containerDomNode);\n      render(createElement(ToastContainer, Object.assign({}, containerConfig)), containerDomNode);\n    }\n  }\n  return options.toastId;\n}\n/**\r\n * Merge provided options with the defaults settings and generate the toastId\r\n */\n\nfunction mergeOptions(type, options) {\n  return _extends({}, options, {\n    type: options && options.type || type,\n    toastId: getToastId(options)\n  });\n}\nfunction createToastByType(type) {\n  return function (content, options) {\n    return dispatchToast(content, mergeOptions(type, options));\n  };\n}\nfunction toast(content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));\n}\ntoast.loading = function (content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.DEFAULT, _extends({\n    isLoading: true,\n    autoClose: false,\n    closeOnClick: false,\n    closeButton: false,\n    draggable: false\n  }, options)));\n};\nfunction handlePromise(promise, _ref2, options) {\n  var pending = _ref2.pending,\n    error = _ref2.error,\n    success = _ref2.success;\n  var id;\n  if (pending) {\n    id = isStr(pending) ? toast.loading(pending, options) : toast.loading(pending.render, _extends({}, options, pending));\n  }\n  var resetParams = {\n    isLoading: null,\n    autoClose: null,\n    closeOnClick: null,\n    closeButton: null,\n    draggable: null\n  };\n  var resolver = function resolver(type, input, result) {\n    // Remove the toast if the input has not been provided. This prevents the toast from hanging\n    // in the pending state if a success/error toast has not been provided.\n    if (input == null) {\n      toast.dismiss(id);\n      return;\n    }\n    var baseParams = _extends({\n      type: type\n    }, resetParams, options, {\n      data: result\n    });\n    var params = isStr(input) ? {\n      render: input\n    } : input; // if the id is set we know that it's an update\n\n    if (id) {\n      toast.update(id, _extends({}, baseParams, params));\n    } else {\n      // using toast.promise without loading\n      toast(params.render, _extends({}, baseParams, params));\n    }\n    return result;\n  };\n  var p = isFn(promise) ? promise() : promise; //call the resolvers only when needed\n\n  p.then(function (result) {\n    return resolver('success', success, result);\n  })[\"catch\"](function (err) {\n    return resolver('error', error, err);\n  });\n  return p;\n}\ntoast.promise = handlePromise;\ntoast.success = /*#__PURE__*/createToastByType(TYPE.SUCCESS);\ntoast.info = /*#__PURE__*/createToastByType(TYPE.INFO);\ntoast.error = /*#__PURE__*/createToastByType(TYPE.ERROR);\ntoast.warning = /*#__PURE__*/createToastByType(TYPE.WARNING);\ntoast.warn = toast.warning;\ntoast.dark = function (content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.DEFAULT, _extends({\n    theme: 'dark'\n  }, options)));\n};\n/**\r\n * Remove toast programmaticaly\r\n */\n\ntoast.dismiss = function (id) {\n  return eventManager.emit(1\n  /* Clear */, id);\n};\n/**\r\n * Clear waiting queue when limit is used\r\n */\n\ntoast.clearWaitingQueue = function (params) {\n  if (params === void 0) {\n    params = {};\n  }\n  return eventManager.emit(5\n  /* ClearWaitingQueue */, params);\n};\n/**\r\n * return true if one container is displaying the toast\r\n */\n\ntoast.isActive = function (id) {\n  var isToastActive = false;\n  containers.forEach(function (container) {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n  return isToastActive;\n};\ntoast.update = function (toastId, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  // if you call toast and toast.update directly nothing will be displayed\n  // this is why I defered the update\n  setTimeout(function () {\n    var toast = getToast(toastId, options);\n    if (toast) {\n      var oldOptions = toast.props,\n        oldContent = toast.content;\n      var nextOptions = _extends({}, oldOptions, options, {\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      });\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n      var content = nextOptions.render || oldContent;\n      delete nextOptions.render;\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n/**\r\n * Used for controlled progress bar.\r\n */\n\ntoast.done = function (id) {\n  toast.update(id, {\n    progress: 1\n  });\n};\n/**\r\n * @deprecated\r\n * API will change in the next major release\r\n *\r\n * Track changes. The callback get the number of toast displayed\r\n */\n\ntoast.onChange = function (callback) {\n  if (isFn(callback)) {\n    eventManager.on(4\n    /* Change */, callback);\n  }\n  return function () {\n    isFn(callback) && eventManager.off(4\n    /* Change */, callback);\n  };\n};\n/**\r\n * @deprecated\r\n * will be removed in the next major release\r\n *\r\n * Configure the ToastContainer when lazy mounted\r\n * Prefer ToastContainer over this one\r\n */\n\ntoast.configure = function (config) {\n  if (config === void 0) {\n    config = {};\n  }\n  lazy = true;\n  containerConfig = config;\n};\ntoast.POSITION = POSITION;\ntoast.TYPE = TYPE;\n/**\r\n * Wait until the ToastContainer is mounted to dispatch the toast\r\n * and attach isActive method\r\n */\n\neventManager.on(2\n/* DidMount */, function (containerInstance) {\n  latestInstance = containerInstance.containerId || containerInstance;\n  containers.set(latestInstance, containerInstance);\n  queue.forEach(function (item) {\n    eventManager.emit(0\n    /* Show */, item.content, item.options);\n  });\n  queue = [];\n}).on(3\n/* WillUnmount */, function (containerInstance) {\n  containers[\"delete\"](containerInstance.containerId || containerInstance);\n  if (containers.size === 0) {\n    eventManager.off(0\n    /* Show */).off(1\n    /* Clear */).off(5\n    /* ClearWaitingQueue */);\n  }\n\n  if (canUseDom && containerDomNode) {\n    document.body.removeChild(containerDomNode);\n  }\n});\nexport { Bounce, Flip, Icons, Slide, ToastContainer, Zoom, collapseToast, cssTransition, toast, useToast, useToastContainer };","map":{"version":3,"names":["isNum","v","isNaN","isBool","isStr","isFn","parseClassName","isToastIdValid","toastId","getAutoCloseDelay","toastAutoClose","containerAutoClose","canUseDom","window","document","createElement","canBeRendered","content","isValidElement","POSITION","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPE","INFO","SUCCESS","WARNING","ERROR","DEFAULT","collapseToast","node","done","duration","scrollHeight","style","requestAnimationFrame","minHeight","height","transition","padding","margin","setTimeout","cssTransition","_ref","enter","exit","appendPosition","_ref$appendPosition","collapse","_ref$collapse","collapseDuration","_ref$collapseDuration","ToastTransition","_ref2","children","position","preventExitTransition","nodeRef","isIn","enterClassName","exitClassName","baseClassName","useRef","animationStep","useLayoutEffect","onEnter","useEffect","onExited","onExit","current","className","addEventListener","onEntered","e","target","dispatchEvent","Event","removeEventListener","React__default","Fragment","eventManager","list","Map","emitQueue","on","event","callback","has","set","get","push","off","cb","filter","cancelEmit","timers","forEach","clearTimeout","emit","args","Array","_len","_key","arguments","timer","apply","_this","useToastContainer","props","_useReducer","useReducer","x","forceUpdate","_useState","useState","toastIds","setToastIds","containerRef","toastToRender","isToastActive","id","indexOf","instance","toastKey","displayedToast","count","queue","containerId","getToast","buildToast","removeToast","clearWaitingQueue","length","limit","state","dequeueToast","_instance$queue$shift","shift","toastContent","toastProps","staleId","appendToast","isNotValid","options","enableMultiContainer","updateId","delay","_objectWithoutPropertiesLoose","_excluded","data","closeToast","isNotAnUpdate","isLoading","theme","icon","key","type","closeButton","rtl","toastClassName","bodyClassName","toastStyle","bodyStyle","onClick","pauseOnHover","pauseOnFocusLoss","draggable","draggablePercent","draggableDirection","closeOnClick","progressClassName","progressStyle","autoClose","hideProgressBar","progress","role","deleteToast","queueLen","freeSlot","toDequeue","i","onOpen","onClose","cloneElement","concat","getToastToRender","toRender","collection","from","values","newestOnTop","reverse","toast","p","getX","targetTouches","clientX","getY","clientY","useToast","isRunning","setIsRunning","_useState2","setPreventExitTransition","toastRef","drag","start","y","delta","removalDistance","canCloseOnClick","canDrag","boundingRect","didMove","syncProps","playToast","once","bindFocusEvents","unbindFocusEvents","onDragStart","bindDragEvents","getBoundingClientRect","nativeEvent","offsetWidth","offsetHeight","onDragTransitionEnd","_drag$boundingRect","top","bottom","left","right","pauseToast","hasFocus","onDragMove","onDragEnd","unbindDragEvents","transform","opacity","Math","abs","eventHandlers","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","onMouseEnter","onMouseLeave","CloseButton","ariaLabel","_ref$ariaLabel","stopPropagation","viewBox","fillRule","d","ProgressBar","hide","userStyle","controlledProgress","_extends","animationDuration","animationPlayState","defaultClassName","cx","_cx","classNames","animationEvent","_animationEvent","Object","assign","defaultProps","Svg","rest","_excluded$1","width","fill","Warning","Info","Success","Error","Spinner","Icons","info","warning","success","error","spinner","Toast","_useToast","Transition","cssClasses","isProgressControlled","maybeIcon","iconProps","Icon","renderCloseButton","ref","_cx2","Bounce","Slide","Zoom","Flip","ToastContainer","_useToastContainer","getClassName","toastList","containerStyle","pointerEvents","map","containers","latestInstance","containerDomNode","containerConfig","lazy","container","generateToastId","random","toString","substring","getToastId","dispatchToast","size","body","appendChild","render","mergeOptions","createToastByType","loading","handlePromise","promise","pending","resetParams","resolver","input","result","dismiss","baseParams","params","update","then","err","warn","dark","isActive","oldOptions","oldContent","nextOptions","onChange","configure","config","containerInstance","item","removeChild"],"sources":["../src/utils/propValidator.ts","../src/utils/constant.ts","../src/utils/collapseToast.ts","../src/utils/cssTransition.tsx","../src/core/eventManager.ts","../src/hooks/useToastContainer.ts","../src/hooks/useToast.ts","../src/components/CloseButton.tsx","../src/components/ProgressBar.tsx","../src/components/Icons.tsx","../src/components/Toast.tsx","../src/components/Transitions.tsx","../src/components/ToastContainer.tsx","../src/core/toast.tsx"],"sourcesContent":["import { isValidElement } from 'react';\n\nimport { Id } from '../types';\n\nexport function isNum(v: any): v is Number {\n  return typeof v === 'number' && !isNaN(v);\n}\n\nexport function isBool(v: any): v is Boolean {\n  return typeof v === 'boolean';\n}\n\nexport function isStr(v: any): v is String {\n  return typeof v === 'string';\n}\n\nexport function isFn(v: any): v is Function {\n  return typeof v === 'function';\n}\n\nexport function parseClassName(v: any) {\n  return isStr(v) || isFn(v) ? v : null;\n}\n\nexport function isToastIdValid(toastId?: Id) {\n  return toastId === 0 || toastId;\n}\n\nexport function getAutoCloseDelay(\n  toastAutoClose?: false | number,\n  containerAutoClose?: false | number\n) {\n  return toastAutoClose === false ||\n    (isNum(toastAutoClose) && toastAutoClose > 0)\n    ? toastAutoClose\n    : containerAutoClose;\n}\n\nexport const canUseDom = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nexport function canBeRendered<T>(content: T): boolean {\n  return (\n    isValidElement(content) || isStr(content) || isFn(content) || isNum(content)\n  );\n}\n","import { ToastPosition, TypeOptions } from '../types';\n\ntype KeyOfPosition =\n  | 'TOP_LEFT'\n  | 'TOP_RIGHT'\n  | 'TOP_CENTER'\n  | 'BOTTOM_LEFT'\n  | 'BOTTOM_RIGHT'\n  | 'BOTTOM_CENTER';\n\ntype KeyOfType = 'INFO' | 'SUCCESS' | 'WARNING' | 'ERROR' | 'DEFAULT';\n\nexport const POSITION: { [key in KeyOfPosition]: ToastPosition } = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\n\nexport const TYPE: { [key in KeyOfType]: TypeOptions } = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default'\n};\n\nexport const enum Default {\n  COLLAPSE_DURATION = 300,\n  DEBOUNCE_DURATION = 50,\n  CSS_NAMESPACE = 'Toastify',\n  DRAGGABLE_PERCENT = 80\n}\n\nexport const enum Direction {\n  X = 'x',\n  Y = 'y'\n}\n\nexport const enum SyntheticEvent {\n  ENTRANCE_ANIMATION_END = 'd'\n}\n","import { Default } from './constant';\n\n/**\n * Used to collapse toast after exit animation\n */\nexport function collapseToast(\n  node: HTMLElement,\n  done: () => void,\n  duration = Default.COLLAPSE_DURATION\n) {\n  const { scrollHeight, style } = node;\n\n  requestAnimationFrame(() => {\n    style.minHeight = 'initial';\n    style.height = scrollHeight + 'px';\n    style.transition = `all ${duration}ms`;\n\n    requestAnimationFrame(() => {\n      style.height = '0';\n      style.padding = '0';\n      style.margin = '0';\n      setTimeout(done, duration as number);\n    });\n  });\n}\n","import React, { useEffect, useLayoutEffect, useRef } from 'react';\n\nimport { collapseToast } from './collapseToast';\nimport { Default, SyntheticEvent } from './constant';\n\nimport { ToastTransitionProps } from '../types';\n\nexport interface CSSTransitionProps {\n  /**\n   * Css class to apply when toast enter\n   */\n  enter: string;\n\n  /**\n   * Css class to apply when toast leave\n   */\n  exit: string;\n\n  /**\n   * Append current toast position to the classname.\n   * If multiple classes are provided, only the last one will get the position\n   * For instance `myclass--top-center`...\n   * `Default: false`\n   */\n  appendPosition?: boolean;\n\n  /**\n   * Collapse toast smoothly when exit animation end\n   * `Default: true`\n   */\n  collapse?: boolean;\n\n  /**\n   * Collapse transition duration\n   * `Default: 300`\n   */\n  collapseDuration?: number;\n}\n\nconst enum AnimationStep {\n  Enter,\n  Exit\n}\n\n/**\n * Css animation that just work.\n * You could use animate.css for instance\n *\n *\n * ```\n * cssTransition({\n *   enter: \"animate__animated animate__bounceIn\",\n *   exit: \"animate__animated animate__bounceOut\"\n * })\n * ```\n *\n */\nexport function cssTransition({\n  enter,\n  exit,\n  appendPosition = false,\n  collapse = true,\n  collapseDuration = Default.COLLAPSE_DURATION\n}: CSSTransitionProps) {\n  return function ToastTransition({\n    children,\n    position,\n    preventExitTransition,\n    done,\n    nodeRef,\n    isIn\n  }: ToastTransitionProps) {\n    const enterClassName = appendPosition ? `${enter}--${position}` : enter;\n    const exitClassName = appendPosition ? `${exit}--${position}` : exit;\n    const baseClassName = useRef<string>();\n    const animationStep = useRef(AnimationStep.Enter);\n\n    useLayoutEffect(() => {\n      onEnter();\n    }, []);\n\n    useEffect(() => {\n      if (!isIn) preventExitTransition ? onExited() : onExit();\n    }, [isIn]);\n\n    function onEnter() {\n      const node = nodeRef.current!;\n      baseClassName.current = node.className;\n      node.className += ` ${enterClassName}`;\n      node.addEventListener('animationend', onEntered);\n      node.addEventListener('animationcancel', onEntered);\n    }\n\n    function onEntered(e: AnimationEvent) {\n      if (e.target !== nodeRef.current) return;\n\n      const node = nodeRef.current!;\n      node.dispatchEvent(new Event(SyntheticEvent.ENTRANCE_ANIMATION_END));\n      node.removeEventListener('animationend', onEntered);\n      node.removeEventListener('animationcancel', onEntered);\n      if (animationStep.current === AnimationStep.Enter) {\n        node.className = baseClassName.current!;\n      }\n    }\n\n    function onExit() {\n      animationStep.current = AnimationStep.Exit;\n      const node = nodeRef.current!;\n\n      node.className += ` ${exitClassName}`;\n      node.addEventListener('animationend', onExited);\n    }\n\n    function onExited() {\n      const node = nodeRef.current!;\n\n      node.removeEventListener('animationend', onExited);\n      collapse ? collapseToast(node, done, collapseDuration) : done();\n    }\n\n    return <>{children}</>;\n  };\n}\n","import {\n  Id,\n  ToastContent,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\nexport const enum Event {\n  Show,\n  Clear,\n  DidMount,\n  WillUnmount,\n  Change,\n  ClearWaitingQueue\n}\n\ntype OnShowCallback = (\n  content: ToastContent,\n  options: NotValidatedToastProps\n) => void;\ntype OnClearCallback = (id?: Id) => void;\ntype OnClearWaitingQueue = (params: ClearWaitingQueueParams) => void;\ntype OnDidMountCallback = (containerInstance: ContainerInstance) => void;\ntype OnWillUnmountCallback = OnDidMountCallback;\nexport type OnChangeCallback = (\n  toast: number,\n  containerId?: number | string\n) => void;\ntype Callback =\n  | OnShowCallback\n  | OnClearCallback\n  | OnClearWaitingQueue\n  | OnDidMountCallback\n  | OnWillUnmountCallback\n  | OnChangeCallback;\ntype TimeoutId = ReturnType<typeof setTimeout>;\n\nexport interface EventManager {\n  list: Map<Event, Callback[]>;\n  emitQueue: Map<Event, TimeoutId[]>;\n  on(event: Event.Show, callback: OnShowCallback): EventManager;\n  on(event: Event.Clear, callback: OnClearCallback): EventManager;\n  on(\n    event: Event.ClearWaitingQueue,\n    callback: OnClearWaitingQueue\n  ): EventManager;\n  on(event: Event.DidMount, callback: OnDidMountCallback): EventManager;\n  on(event: Event.WillUnmount, callback: OnWillUnmountCallback): EventManager;\n  on(event: Event.Change, callback: OnChangeCallback): EventManager;\n  off(event: Event, callback?: Callback): EventManager;\n  cancelEmit(event: Event): EventManager;\n  emit(\n    event: Event.Show,\n    content: React.ReactNode,\n    options: NotValidatedToastProps\n  ): void;\n  emit(event: Event.Clear, id?: string | number): void;\n  emit(event: Event.ClearWaitingQueue, params: ClearWaitingQueueParams): void;\n  emit(event: Event.DidMount, containerInstance: ContainerInstance): void;\n  emit(event: Event.WillUnmount, containerInstance: ContainerInstance): void;\n  emit(event: Event.Change, toast: number, containerId?: number | string): void;\n}\n\nexport const eventManager: EventManager = {\n  list: new Map(),\n  emitQueue: new Map(),\n\n  on(event: Event, callback: Callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event)!.push(callback);\n    return this;\n  },\n\n  off(event, callback) {\n    if (callback) {\n      const cb = this.list.get(event)!.filter(cb => cb !== callback);\n      this.list.set(event, cb);\n      return this;\n    }\n    this.list.delete(event);\n    return this;\n  },\n\n  cancelEmit(event) {\n    const timers = this.emitQueue.get(event);\n    if (timers) {\n      timers.forEach(clearTimeout);\n      this.emitQueue.delete(event);\n    }\n\n    return this;\n  },\n\n  /**\n   * Enqueue the event at the end of the call stack\n   * Doing so let the user call toast as follow:\n   * toast('1')\n   * toast('2')\n   * toast('3')\n   * Without setTimemout the code above will not work\n   */\n  emit(event: Event, ...args: any[]) {\n    this.list.has(event) &&\n      this.list.get(event)!.forEach((callback: Callback) => {\n        const timer: TimeoutId = setTimeout(() => {\n          // @ts-ignore\n          callback(...args);\n        }, 0);\n\n        this.emitQueue.has(event) || this.emitQueue.set(event, []);\n        this.emitQueue.get(event)!.push(timer);\n      });\n  }\n};\n","import {\n  useEffect,\n  useRef,\n  useReducer,\n  cloneElement,\n  isValidElement,\n  useState\n} from 'react';\nimport {\n  parseClassName,\n  canBeRendered,\n  isBool,\n  isFn,\n  isNum,\n  isStr,\n  isToastIdValid,\n  getAutoCloseDelay\n} from '../utils';\nimport { eventManager, Event } from '../core/eventManager';\n\nimport {\n  Id,\n  ToastContainerProps,\n  ToastProps,\n  ToastContent,\n  Toast,\n  ToastPosition,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  ToastTransition\n} from '../types';\n\ninterface QueuedToast {\n  toastContent: ToastContent;\n  toastProps: ToastProps;\n  staleId?: Id;\n}\n\nexport interface ContainerInstance {\n  toastKey: number;\n  displayedToast: number;\n  props: ToastContainerProps;\n  containerId?: Id | null;\n  isToastActive: (toastId: Id) => boolean;\n  getToast: (id: Id) => Toast | null | undefined;\n  queue: QueuedToast[];\n  count: number;\n}\n\nexport function useToastContainer(props: ToastContainerProps) {\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n  const [toastIds, setToastIds] = useState<Id[]>([]);\n  const containerRef = useRef(null);\n  const toastToRender = useRef(new Map<Id, Toast>()).current;\n  const isToastActive = (id: Id) => toastIds.indexOf(id) !== -1;\n  const instance = useRef<ContainerInstance>({\n    toastKey: 1,\n    displayedToast: 0,\n    count: 0,\n    queue: [],\n    props,\n    containerId: null,\n    isToastActive,\n    getToast: id => toastToRender.get(id)\n  }).current;\n\n  useEffect(() => {\n    instance.containerId = props.containerId;\n    eventManager\n      .cancelEmit(Event.WillUnmount)\n      .on(Event.Show, buildToast)\n      .on(Event.Clear, toastId => containerRef.current && removeToast(toastId))\n      .on(Event.ClearWaitingQueue, clearWaitingQueue)\n      .emit(Event.DidMount, instance);\n\n    return () => eventManager.emit(Event.WillUnmount, instance);\n  }, []);\n\n  useEffect(() => {\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toastIds.length;\n    eventManager.emit(Event.Change, toastIds.length, props.containerId);\n  }, [toastIds]);\n\n  useEffect(() => {\n    instance.props = props;\n  });\n\n  function clearWaitingQueue({ containerId }: ClearWaitingQueueParams) {\n    const { limit } = instance.props;\n    if (limit && (!containerId || instance.containerId === containerId)) {\n      instance.count -= instance.queue.length;\n      instance.queue = [];\n    }\n  }\n\n  function removeToast(toastId?: Id) {\n    setToastIds(state =>\n      isToastIdValid(toastId) ? state.filter(id => id !== toastId) : []\n    );\n  }\n\n  function dequeueToast() {\n    const {\n      toastContent,\n      toastProps,\n      staleId\n    } = instance.queue.shift() as QueuedToast;\n    appendToast(toastContent, toastProps, staleId);\n  }\n\n  /**\n   * check if a container is attached to the dom\n   * check for multi-container, build only if associated\n   * check for duplicate toastId if no update\n   */\n  function isNotValid(options: NotValidatedToastProps) {\n    return (\n      !containerRef.current ||\n      (instance.props.enableMultiContainer &&\n        options.containerId !== instance.props.containerId) ||\n      (toastToRender.has(options.toastId) && options.updateId == null)\n    );\n  }\n\n  // this function and all the function called inside needs to rely on refs\n  function buildToast(\n    content: ToastContent,\n    { delay, staleId, ...options }: NotValidatedToastProps\n  ) {\n    if (!canBeRendered(content) || isNotValid(options)) return;\n\n    const { toastId, updateId, data } = options;\n    const { props } = instance;\n    const closeToast = () => removeToast(toastId);\n    const isNotAnUpdate = updateId == null;\n\n    if (isNotAnUpdate) instance.count++;\n\n    const toastProps: ToastProps = {\n      toastId,\n      updateId,\n      isLoading: options.isLoading,\n      theme: options.theme || props.theme!,\n      icon: options.icon != null ? options.icon : props.icon,\n      isIn: false,\n      key: options.key || instance.toastKey++,\n      type: options.type!,\n      closeToast: closeToast,\n      closeButton: options.closeButton,\n      rtl: props.rtl,\n      position: options.position || (props.position as ToastPosition),\n      transition: options.transition || (props.transition as ToastTransition),\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(\n        options.bodyClassName || props.bodyClassName\n      ),\n      style: options.style || props.toastStyle,\n      bodyStyle: options.bodyStyle || props.bodyStyle,\n      onClick: options.onClick || props.onClick,\n      pauseOnHover: isBool(options.pauseOnHover)\n        ? options.pauseOnHover\n        : props.pauseOnHover,\n      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss)\n        ? options.pauseOnFocusLoss\n        : props.pauseOnFocusLoss,\n      draggable: isBool(options.draggable)\n        ? options.draggable\n        : props.draggable,\n      draggablePercent:\n        options.draggablePercent || (props.draggablePercent as number),\n      draggableDirection:\n        options.draggableDirection || props.draggableDirection,\n      closeOnClick: isBool(options.closeOnClick)\n        ? options.closeOnClick\n        : props.closeOnClick,\n      progressClassName: parseClassName(\n        options.progressClassName || props.progressClassName\n      ),\n      progressStyle: options.progressStyle || props.progressStyle,\n      autoClose: options.isLoading\n        ? false\n        : getAutoCloseDelay(options.autoClose, props.autoClose),\n      hideProgressBar: isBool(options.hideProgressBar)\n        ? options.hideProgressBar\n        : props.hideProgressBar,\n      progress: options.progress,\n      role: options.role || props.role,\n      deleteToast() {\n        toastToRender.delete(toastId);\n        const queueLen = instance.queue.length;\n        instance.count = isToastIdValid(toastId)\n          ? instance.count - 1\n          : instance.count - instance.displayedToast;\n\n        if (instance.count < 0) instance.count = 0;\n\n        if (queueLen > 0) {\n          const freeSlot = isToastIdValid(toastId) ? 1 : instance.props.limit!;\n\n          if (queueLen === 1 || freeSlot === 1) {\n            instance.displayedToast++;\n            dequeueToast();\n          } else {\n            const toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n            instance.displayedToast = toDequeue;\n\n            for (let i = 0; i < toDequeue; i++) dequeueToast();\n          }\n        } else {\n          forceUpdate();\n        }\n      }\n    };\n\n    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastProps.onClose = options.onClose;\n\n    toastProps.closeButton = props.closeButton;\n\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      toastProps.closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      toastProps.closeButton = canBeRendered(props.closeButton)\n        ? props.closeButton\n        : true;\n    }\n\n    let toastContent = content;\n\n    if (isValidElement(content) && !isStr(content.type)) {\n      toastContent = cloneElement(content, {\n        closeToast,\n        toastProps,\n        data\n      });\n    } else if (isFn(content)) {\n      toastContent = content({ closeToast, toastProps, data });\n    }\n\n    // not handling limit + delay by design. Waiting for user feedback first\n    if (\n      props.limit &&\n      props.limit > 0 &&\n      instance.count > props.limit &&\n      isNotAnUpdate\n    ) {\n      instance.queue.push({ toastContent, toastProps, staleId });\n    } else if (isNum(delay) && (delay as number) > 0) {\n      setTimeout(() => {\n        appendToast(toastContent, toastProps, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastProps, staleId);\n    }\n  }\n\n  function appendToast(\n    content: ToastContent,\n    toastProps: ToastProps,\n    staleId?: Id\n  ) {\n    const { toastId } = toastProps;\n\n    if (staleId) toastToRender.delete(staleId);\n\n    toastToRender.set(toastId, {\n      content,\n      props: toastProps\n    });\n    setToastIds(state => [...state, toastId].filter(id => id !== staleId));\n  }\n\n  function getToastToRender<T>(\n    cb: (position: ToastPosition, toastList: Toast[]) => T\n  ) {\n    const toRender = new Map<ToastPosition, Toast[]>();\n    const collection = Array.from(toastToRender.values());\n\n    if (props.newestOnTop) collection.reverse();\n\n    collection.forEach(toast => {\n      const { position } = toast.props;\n      toRender.has(position) || toRender.set(position, []);\n      toRender.get(position)!.push(toast);\n    });\n\n    return Array.from(toRender, p => cb(p[0], p[1]));\n  }\n\n  return {\n    getToastToRender,\n    containerRef,\n    isToastActive\n  };\n}\n","import {\n  useState,\n  useRef,\n  useEffect,\n  isValidElement,\n  DOMAttributes\n} from 'react';\n\nimport { isFn, Default, Direction, SyntheticEvent } from '../utils';\nimport { ToastProps } from '../types';\n\ninterface Draggable {\n  start: number;\n  x: number;\n  y: number;\n  delta: number;\n  removalDistance: number;\n  canCloseOnClick: boolean;\n  canDrag: boolean;\n  boundingRect: DOMRect | null;\n  didMove: boolean;\n}\n\ntype DragEvent = MouseEvent & TouchEvent;\n\nfunction getX(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientX\n    : e.clientX;\n}\n\nfunction getY(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientY\n    : e.clientY;\n}\n\nexport function useToast(props: ToastProps) {\n  const [isRunning, setIsRunning] = useState(false);\n  const [preventExitTransition, setPreventExitTransition] = useState(false);\n  const toastRef = useRef<HTMLDivElement>(null);\n  const drag = useRef<Draggable>({\n    start: 0,\n    x: 0,\n    y: 0,\n    delta: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null,\n    didMove: false\n  }).current;\n  const syncProps = useRef(props);\n  const { autoClose, pauseOnHover, closeToast, onClick, closeOnClick } = props;\n\n  useEffect(() => {\n    syncProps.current = props;\n  });\n\n  useEffect(() => {\n    if (toastRef.current)\n      toastRef.current.addEventListener(\n        SyntheticEvent.ENTRANCE_ANIMATION_END,\n        playToast,\n        { once: true }\n      );\n\n    if (isFn(props.onOpen))\n      props.onOpen(isValidElement(props.children) && props.children.props);\n\n    return () => {\n      const props = syncProps.current;\n      if (isFn(props.onClose))\n        props.onClose(isValidElement(props.children) && props.children.props);\n    };\n  }, []);\n\n  useEffect(() => {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return () => {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n\n  function onDragStart(\n    e: React.MouseEvent<HTMLElement, MouseEvent> | React.TouchEvent<HTMLElement>\n  ) {\n    if (props.draggable) {\n      bindDragEvents();\n      const toast = toastRef.current!;\n      drag.canCloseOnClick = true;\n      drag.canDrag = true;\n      drag.boundingRect = toast.getBoundingClientRect();\n      toast.style.transition = '';\n      drag.x = getX(e.nativeEvent as DragEvent);\n      drag.y = getY(e.nativeEvent as DragEvent);\n\n      if (props.draggableDirection === Direction.X) {\n        drag.start = drag.x;\n        drag.removalDistance =\n          toast.offsetWidth * (props.draggablePercent / 100);\n      } else {\n        drag.start = drag.y;\n        drag.removalDistance =\n          toast.offsetHeight *\n          (props.draggablePercent === Default.DRAGGABLE_PERCENT\n            ? props.draggablePercent * 1.5\n            : props.draggablePercent / 100);\n      }\n    }\n  }\n\n  function onDragTransitionEnd() {\n    if (drag.boundingRect) {\n      const { top, bottom, left, right } = drag.boundingRect;\n\n      if (\n        props.pauseOnHover &&\n        drag.x >= left &&\n        drag.x <= right &&\n        drag.y >= top &&\n        drag.y <= bottom\n      ) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n\n  function playToast() {\n    setIsRunning(true);\n  }\n\n  function pauseToast() {\n    setIsRunning(false);\n  }\n\n  function bindFocusEvents() {\n    if (!document.hasFocus()) pauseToast();\n\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n\n  function bindDragEvents() {\n    drag.didMove = false;\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n\n  function onDragMove(e: MouseEvent | TouchEvent) {\n    const toast = toastRef.current!;\n    if (drag.canDrag && toast) {\n      drag.didMove = true;\n      if (isRunning) pauseToast();\n      drag.x = getX(e as DragEvent);\n      drag.y = getY(e as DragEvent);\n      if (props.draggableDirection === Direction.X) {\n        drag.delta = drag.x - drag.start;\n      } else {\n        drag.delta = drag.y - drag.start;\n      }\n\n      // prevent false positif during a toast click\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n      toast.style.transform = `translate${props.draggableDirection}(${drag.delta}px)`;\n      toast.style.opacity = `${1 -\n        Math.abs(drag.delta / drag.removalDistance)}`;\n    }\n  }\n\n  function onDragEnd() {\n    unbindDragEvents();\n    const toast = toastRef.current!;\n    if (drag.canDrag && drag.didMove && toast) {\n      drag.canDrag = false;\n      if (Math.abs(drag.delta) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = `translate${props.draggableDirection}(0)`;\n      toast.style.opacity = '1';\n    }\n  }\n\n  const eventHandlers: DOMAttributes<HTMLElement> = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  }\n\n  // prevent toast from closing when user drags the toast\n  if (closeOnClick) {\n    eventHandlers.onClick = (e: React.MouseEvent) => {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n\n  return {\n    playToast,\n    pauseToast,\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  };\n}\n","import * as React from 'react';\nimport { Default } from '../utils';\nimport { Theme, TypeOptions } from '../types';\n\nexport interface CloseButtonProps {\n  closeToast: (e: React.MouseEvent<HTMLElement>) => void;\n  type: TypeOptions;\n  ariaLabel?: string;\n  theme: Theme;\n}\n\nexport function CloseButton({\n  closeToast,\n  theme,\n  ariaLabel = 'close'\n}: CloseButtonProps) {\n  return (\n    <button\n      className={`${Default.CSS_NAMESPACE}__close-button ${Default.CSS_NAMESPACE}__close-button--${theme}`}\n      type=\"button\"\n      onClick={e => {\n        e.stopPropagation();\n        closeToast(e);\n      }}\n      aria-label={ariaLabel}\n    >\n      <svg aria-hidden=\"true\" viewBox=\"0 0 14 16\">\n        <path\n          fillRule=\"evenodd\"\n          d=\"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n        />\n      </svg>\n    </button>\n  );\n}\n","import * as React from 'react';\nimport cx from 'clsx';\n\nimport { TYPE, Default, isFn } from './../utils';\nimport { TypeOptions, ToastClassName, Theme } from '../types';\n\nexport interface ProgressBarProps {\n  /**\n   * The animation delay which determine when to close the toast\n   */\n  delay: number;\n\n  /**\n   * Whether or not the animation is running or paused\n   */\n  isRunning: boolean;\n\n  /**\n   * Func to close the current toast\n   */\n  closeToast: () => void;\n\n  /**\n   * Optional type : info, success ...\n   */\n  type: TypeOptions;\n\n  /**\n   * The theme that is currently used\n   */\n  theme: Theme;\n\n  /**\n   * Hide or not the progress bar\n   */\n  hide?: boolean;\n\n  /**\n   * Optionnal className\n   */\n  className?: ToastClassName;\n\n  /**\n   * Optionnal inline style\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * Tell wether or not controlled progress bar is used\n   */\n  controlledProgress?: boolean;\n\n  /**\n   * Controlled progress value\n   */\n  progress?: number | string;\n\n  /**\n   * Support rtl content\n   */\n  rtl?: boolean;\n\n  /**\n   * Tell if the component is visible on screen or not\n   */\n  isIn?: boolean;\n}\n\nexport function ProgressBar({\n  delay,\n  isRunning,\n  closeToast,\n  type,\n  hide,\n  className,\n  style: userStyle,\n  controlledProgress,\n  progress,\n  rtl,\n  isIn,\n  theme\n}: ProgressBarProps) {\n  const style: React.CSSProperties = {\n    ...userStyle,\n    animationDuration: `${delay}ms`,\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: hide ? 0 : 1\n  };\n\n  if (controlledProgress) style.transform = `scaleX(${progress})`;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__progress-bar`,\n    controlledProgress\n      ? `${Default.CSS_NAMESPACE}__progress-bar--controlled`\n      : `${Default.CSS_NAMESPACE}__progress-bar--animated`,\n    `${Default.CSS_NAMESPACE}__progress-bar-theme--${theme}`,\n    `${Default.CSS_NAMESPACE}__progress-bar--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__progress-bar--rtl`]: rtl\n    }\n  );\n  const classNames = isFn(className)\n    ? className({\n        rtl,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n\n  // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n  const animationEvent = {\n    [controlledProgress && progress! >= 1\n      ? 'onTransitionEnd'\n      : 'onAnimationEnd']:\n      controlledProgress && progress! < 1\n        ? null\n        : () => {\n            isIn && closeToast();\n          }\n  };\n\n  // TODO: add aria-valuenow, aria-valuemax, aria-valuemin\n\n  return (\n    <div\n      role=\"progressbar\"\n      aria-hidden={hide ? 'true' : 'false'}\n      aria-label=\"notification timer\"\n      className={classNames}\n      style={style}\n      {...animationEvent}\n    />\n  );\n}\n\nProgressBar.defaultProps = {\n  type: TYPE.DEFAULT,\n  hide: false\n};\n","import * as React from 'react';\n\nimport { Theme, TypeOptions } from '../types';\nimport { Default } from '../utils';\n\n/**\n * Used when providing custom icon\n */\nexport interface IconProps {\n  theme: Theme;\n  type: TypeOptions;\n}\n\nexport type BuiltInIconProps = React.SVGProps<SVGSVGElement> & IconProps;\n\nconst Svg: React.FC<BuiltInIconProps> = ({ theme, type, ...rest }) => (\n  <svg\n    viewBox=\"0 0 24 24\"\n    width=\"100%\"\n    height=\"100%\"\n    fill={\n      theme === 'colored'\n        ? 'currentColor'\n        : `var(--toastify-icon-color-${type})`\n    }\n    {...rest}\n  />\n);\n\nfunction Warning(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z\" />\n    </Svg>\n  );\n}\n\nfunction Info(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z\" />\n    </Svg>\n  );\n}\n\nfunction Success(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z\" />\n    </Svg>\n  );\n}\n\nfunction Error(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\" />\n    </Svg>\n  );\n}\n\nfunction Spinner() {\n  return <div className={`${Default.CSS_NAMESPACE}__spinner`} />;\n}\n\nexport const Icons = {\n  info: Info,\n  warning: Warning,\n  success: Success,\n  error: Error,\n  spinner: Spinner\n};\n","import * as React from 'react';\nimport cx from 'clsx';\n\nimport { ProgressBar } from './ProgressBar';\nimport { Icons } from './Icons';\nimport { ToastProps } from '../types';\nimport { Default, isFn, isStr } from '../utils';\nimport { useToast } from '../hooks';\n\nexport const Toast: React.FC<ToastProps> = props => {\n  const {\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  } = useToast(props);\n  const {\n    closeButton,\n    children,\n    autoClose,\n    onClick,\n    type,\n    hideProgressBar,\n    closeToast,\n    transition: Transition,\n    position,\n    className,\n    style,\n    bodyClassName,\n    bodyStyle,\n    progressClassName,\n    progressStyle,\n    updateId,\n    role,\n    progress,\n    rtl,\n    toastId,\n    deleteToast,\n    isIn,\n    isLoading,\n    icon,\n    theme\n  } = props;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__toast`,\n    `${Default.CSS_NAMESPACE}__toast-theme--${theme}`,\n    `${Default.CSS_NAMESPACE}__toast--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__toast--rtl`]: rtl\n    }\n  );\n  const cssClasses = isFn(className)\n    ? className({\n        rtl,\n        position,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n  const isProgressControlled = !!progress;\n  const maybeIcon = Icons[type as keyof typeof Icons];\n  const iconProps = { theme, type };\n  let Icon: React.ReactNode = maybeIcon && maybeIcon(iconProps);\n\n  if (icon === false) {\n    Icon = void 0;\n  } else if (isFn(icon)) {\n    Icon = icon(iconProps);\n  } else if (React.isValidElement(icon)) {\n    Icon = React.cloneElement(icon, iconProps);\n  } else if (isStr(icon)) {\n    Icon = icon;\n  } else if (isLoading) {\n    Icon = Icons.spinner();\n  }\n\n  function renderCloseButton(closeButton: any) {\n    if (!closeButton) return;\n\n    const props = { closeToast, type, theme };\n\n    if (isFn(closeButton)) return closeButton(props);\n\n    if (React.isValidElement(closeButton))\n      return React.cloneElement(closeButton, props);\n  }\n\n  return (\n    <Transition\n      isIn={isIn}\n      done={deleteToast}\n      position={position}\n      preventExitTransition={preventExitTransition}\n      nodeRef={toastRef}\n    >\n      <div\n        id={toastId as string}\n        onClick={onClick}\n        className={cssClasses}\n        {...eventHandlers}\n        style={style}\n        ref={toastRef}\n      >\n        <div\n          {...(isIn && { role: role })}\n          className={\n            isFn(bodyClassName)\n              ? bodyClassName({ type })\n              : cx(`${Default.CSS_NAMESPACE}__toast-body`, bodyClassName)\n          }\n          style={bodyStyle}\n        >\n          {Icon && (\n            <div\n              className={cx(`${Default.CSS_NAMESPACE}__toast-icon`, {\n                [`${Default.CSS_NAMESPACE}--animate-icon ${Default.CSS_NAMESPACE}__zoom-enter`]: !isLoading\n              })}\n            >\n              {Icon}\n            </div>\n          )}\n          <div>{children}</div>\n        </div>\n        {renderCloseButton(closeButton)}\n        {(autoClose || isProgressControlled) && (\n          <ProgressBar\n            {...(updateId && !isProgressControlled\n              ? { key: `pb-${updateId}` }\n              : {})}\n            rtl={rtl}\n            theme={theme}\n            delay={autoClose as number}\n            isRunning={isRunning}\n            isIn={isIn}\n            closeToast={closeToast}\n            hide={hideProgressBar}\n            type={type}\n            style={progressStyle}\n            className={progressClassName}\n            controlledProgress={isProgressControlled}\n            progress={progress}\n          />\n        )}\n      </div>\n    </Transition>\n  );\n};\n","import { Default, cssTransition } from '../utils';\n\nconst Bounce = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-exit`,\n  appendPosition: true\n});\n\nconst Slide = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-exit`,\n  appendPosition: true\n});\n\nconst Zoom = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-exit`\n});\n\nconst Flip = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-exit`\n});\n\nexport { Bounce, Slide, Zoom, Flip };\n","import * as React from 'react';\nimport cx from 'clsx';\n\nimport { Toast } from './Toast';\nimport { CloseButton } from './CloseButton';\nimport { Bounce } from './Transitions';\nimport { POSITION, Direction, Default, parseClassName, isFn } from '../utils';\nimport { useToastContainer } from '../hooks';\nimport { ToastContainerProps, ToastPosition } from '../types';\n\nexport const ToastContainer: React.FC<ToastContainerProps> = props => {\n  const { getToastToRender, containerRef, isToastActive } = useToastContainer(\n    props\n  );\n  const { className, style, rtl, containerId } = props;\n\n  function getClassName(position: ToastPosition) {\n    const defaultClassName = cx(\n      `${Default.CSS_NAMESPACE}__toast-container`,\n      `${Default.CSS_NAMESPACE}__toast-container--${position}`,\n      { [`${Default.CSS_NAMESPACE}__toast-container--rtl`]: rtl }\n    );\n    return isFn(className)\n      ? className({\n          position,\n          rtl,\n          defaultClassName\n        })\n      : cx(defaultClassName, parseClassName(className));\n  }\n\n  return (\n    <div\n      ref={containerRef}\n      className={Default.CSS_NAMESPACE as string}\n      id={containerId as string}\n    >\n      {getToastToRender((position, toastList) => {\n        const containerStyle: React.CSSProperties = !toastList.length\n          ? { ...style, pointerEvents: 'none' }\n          : { ...style };\n\n        return (\n          <div\n            className={getClassName(position)}\n            style={containerStyle}\n            key={`container-${position}`}\n          >\n            {toastList.map(({ content, props: toastProps }) => {\n              return (\n                <Toast\n                  {...toastProps}\n                  isIn={isToastActive(toastProps.toastId)}\n                  key={`toast-${toastProps.key}`}\n                  closeButton={\n                    toastProps.closeButton === true\n                      ? CloseButton\n                      : toastProps.closeButton\n                  }\n                >\n                  {content}\n                </Toast>\n              );\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nToastContainer.defaultProps = {\n  position: POSITION.TOP_RIGHT as ToastPosition,\n  transition: Bounce,\n  rtl: false,\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  newestOnTop: false,\n  draggable: true,\n  draggablePercent: Default.DRAGGABLE_PERCENT as number,\n  draggableDirection: Direction.X,\n  role: 'alert',\n  theme: 'light'\n};\n","import * as React from 'react';\nimport { render } from 'react-dom';\n\nimport { POSITION, TYPE, canUseDom, isStr, isNum, isFn } from '../utils';\nimport { eventManager, OnChangeCallback, Event } from './eventManager';\nimport {\n  ToastContent,\n  ToastOptions,\n  ToastProps,\n  Id,\n  ToastContainerProps,\n  UpdateOptions,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  TypeOptions\n} from '../types';\nimport { ContainerInstance } from '../hooks';\nimport { ToastContainer } from '../components';\n\ninterface EnqueuedToast {\n  content: ToastContent;\n  options: NotValidatedToastProps;\n}\n\nlet containers = new Map<ContainerInstance | Id, ContainerInstance>();\nlet latestInstance: ContainerInstance | Id;\nlet containerDomNode: HTMLElement;\nlet containerConfig: ToastContainerProps;\nlet queue: EnqueuedToast[] = [];\nlet lazy = false;\n\n/**\n * Get the toast by id, given it's in the DOM, otherwise returns null\n */\nfunction getToast(toastId: Id, { containerId }: ToastOptions) {\n  const container = containers.get(containerId || latestInstance);\n  if (!container) return null;\n\n  return container.getToast(toastId);\n}\n\n/**\n * Generate a random toastId\n */\nfunction generateToastId() {\n  return Math.random()\n    .toString(36)\n    .substring(2, 9);\n}\n\n/**\n * Generate a toastId or use the one provided\n */\nfunction getToastId(options?: ToastOptions) {\n  if (options && (isStr(options.toastId) || isNum(options.toastId))) {\n    return options.toastId;\n  }\n\n  return generateToastId();\n}\n\n/**\n * If the container is not mounted, the toast is enqueued and\n * the container lazy mounted\n */\nfunction dispatchToast(\n  content: ToastContent,\n  options: NotValidatedToastProps\n): Id {\n  if (containers.size > 0) {\n    eventManager.emit(Event.Show, content, options);\n  } else {\n    queue.push({ content, options });\n    if (lazy && canUseDom) {\n      lazy = false;\n      containerDomNode = document.createElement('div');\n      document.body.appendChild(containerDomNode);\n      render(<ToastContainer {...containerConfig} />, containerDomNode);\n    }\n  }\n\n  return options.toastId;\n}\n\n/**\n * Merge provided options with the defaults settings and generate the toastId\n */\nfunction mergeOptions(type: string, options?: ToastOptions) {\n  return {\n    ...options,\n    type: (options && options.type) || type,\n    toastId: getToastId(options)\n  } as NotValidatedToastProps;\n}\n\nfunction createToastByType(type: string) {\n  return (content: ToastContent, options?: ToastOptions) =>\n    dispatchToast(content, mergeOptions(type, options));\n}\n\nfunction toast(content: ToastContent, options?: ToastOptions) {\n  return dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));\n}\n\ntoast.loading = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(\n    content,\n    mergeOptions(TYPE.DEFAULT, {\n      isLoading: true,\n      autoClose: false,\n      closeOnClick: false,\n      closeButton: false,\n      draggable: false,\n      ...options\n    })\n  );\n\nexport interface ToastPromiseParams {\n  pending?: string | UpdateOptions;\n  success?: string | UpdateOptions;\n  error?: string | UpdateOptions;\n}\n\nfunction handlePromise<T>(\n  promise: Promise<T> | (() => Promise<T>),\n  { pending, error, success }: ToastPromiseParams,\n  options?: ToastOptions\n) {\n  let id: Id;\n\n  if (pending) {\n    id = isStr(pending)\n      ? toast.loading(pending, options)\n      : toast.loading(pending.render, {\n          ...options,\n          ...(pending as ToastOptions)\n        });\n  }\n\n  const resetParams = {\n    isLoading: null,\n    autoClose: null,\n    closeOnClick: null,\n    closeButton: null,\n    draggable: null\n  };\n\n  const resolver = (\n    type: TypeOptions,\n    input: string | UpdateOptions | undefined,\n    result: T\n  ) => {\n    // Remove the toast if the input has not been provided. This prevents the toast from hanging\n    // in the pending state if a success/error toast has not been provided.\n    if (input == null) {\n      toast.dismiss(id);\n      return;\n    }\n\n    const baseParams = {\n      type,\n      ...resetParams,\n      ...options,\n      data: result\n    };\n    const params = isStr(input) ? { render: input } : input;\n\n    // if the id is set we know that it's an update\n    if (id) {\n      toast.update(id, {\n        ...baseParams,\n        ...params\n      });\n    } else {\n      // using toast.promise without loading\n      toast(params.render, {\n        ...baseParams,\n        ...params\n      } as ToastOptions);\n    }\n\n    return result;\n  };\n\n  const p = isFn(promise) ? promise() : promise;\n\n  //call the resolvers only when needed\n  p.then(result => resolver('success', success, result)).catch(err =>\n    resolver('error', error, err)\n  );\n\n  return p;\n}\n\ntoast.promise = handlePromise;\ntoast.success = createToastByType(TYPE.SUCCESS);\ntoast.info = createToastByType(TYPE.INFO);\ntoast.error = createToastByType(TYPE.ERROR);\ntoast.warning = createToastByType(TYPE.WARNING);\ntoast.warn = toast.warning;\ntoast.dark = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(\n    content,\n    mergeOptions(TYPE.DEFAULT, {\n      theme: 'dark',\n      ...options\n    })\n  );\n\n/**\n * Remove toast programmaticaly\n */\ntoast.dismiss = (id?: Id) => eventManager.emit(Event.Clear, id);\n\n/**\n * Clear waiting queue when limit is used\n */\ntoast.clearWaitingQueue = (params: ClearWaitingQueueParams = {}) =>\n  eventManager.emit(Event.ClearWaitingQueue, params);\n\n/**\n * return true if one container is displaying the toast\n */\ntoast.isActive = (id: Id) => {\n  let isToastActive = false;\n\n  containers.forEach(container => {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n\n  return isToastActive;\n};\n\ntoast.update = (toastId: Id, options: UpdateOptions = {}) => {\n  // if you call toast and toast.update directly nothing will be displayed\n  // this is why I defered the update\n  setTimeout(() => {\n    const toast = getToast(toastId, options as ToastOptions);\n    if (toast) {\n      const { props: oldOptions, content: oldContent } = toast;\n\n      const nextOptions = {\n        ...oldOptions,\n        ...options,\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      } as ToastProps & UpdateOptions;\n\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n\n      const content = nextOptions.render || oldContent;\n      delete nextOptions.render;\n\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n\n/**\n * Used for controlled progress bar.\n */\ntoast.done = (id: Id) => {\n  toast.update(id, {\n    progress: 1\n  });\n};\n\n/**\n * @deprecated\n * API will change in the next major release\n *\n * Track changes. The callback get the number of toast displayed\n */\ntoast.onChange = (callback: OnChangeCallback) => {\n  if (isFn(callback)) {\n    eventManager.on(Event.Change, callback);\n  }\n  return () => {\n    isFn(callback) && eventManager.off(Event.Change, callback);\n  };\n};\n\n/**\n * @deprecated\n * will be removed in the next major release\n *\n * Configure the ToastContainer when lazy mounted\n * Prefer ToastContainer over this one\n */\ntoast.configure = (config: ToastContainerProps = {}) => {\n  lazy = true;\n  containerConfig = config;\n};\n\ntoast.POSITION = POSITION;\ntoast.TYPE = TYPE;\n\n/**\n * Wait until the ToastContainer is mounted to dispatch the toast\n * and attach isActive method\n */\neventManager\n  .on(Event.DidMount, (containerInstance: ContainerInstance) => {\n    latestInstance = containerInstance.containerId || containerInstance;\n    containers.set(latestInstance, containerInstance);\n\n    queue.forEach(item => {\n      eventManager.emit(Event.Show, item.content, item.options);\n    });\n\n    queue = [];\n  })\n  .on(Event.WillUnmount, (containerInstance: ContainerInstance) => {\n    containers.delete(containerInstance.containerId || containerInstance);\n\n    if (containers.size === 0) {\n      eventManager\n        .off(Event.Show)\n        .off(Event.Clear)\n        .off(Event.ClearWaitingQueue);\n    }\n\n    if (canUseDom && containerDomNode) {\n      document.body.removeChild(containerDomNode);\n    }\n  });\n\nexport { toast };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}