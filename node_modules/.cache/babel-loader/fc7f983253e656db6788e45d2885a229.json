{"ast":null,"code":"var _jsxFileName = \"E:\\\\Files\\\\AllData_ReactDashboard\\\\src\\\\Components\\\\Forms\\\\DynamicForm.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Navbar from '../Pages/Navbar';\nconst DynamicForm = () => {\n  const [FormInputData, setFormInputData] = useState([]);\n  const [formValue, setFormValue] = useState({\n    username: '',\n    email: '',\n    gender: '',\n    interests: [],\n    country: ''\n  });\n  const [disable, setDisable] = useState('typing');\n  const handleInput = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    if (type === 'checkbox') {\n      const updatedInterests = [...formValue.interests];\n      if (checked) {\n        updatedInterests.push(value);\n      } else {\n        const index = updatedInterests.indexOf(value);\n        if (index !== -1) {\n          updatedInterests.splice(index, 1);\n        }\n      }\n      setFormValue({\n        ...formValue,\n        interests: updatedInterests\n      });\n    } else {\n      setFormValue({\n        ...formValue,\n        [name]: value\n      });\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('Form Value:', formValue);\n    setDisable('submitted');\n    // window.location.reload();\n  };\n\n  useEffect(() => {\n    axios.get('https://dashboard-3frk.onrender.com/fields').then(response => {\n      setFormInputData(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"Dynamic-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, \" Form \"), FormInputData.map(field => field.type === \"text\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    type: field.type,\n    name: field.name,\n    placeholder: field.placeholder,\n    required: true,\n    value: formValue.username,\n    onChange: handleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 33\n    }\n  })) : field.type === \"email\" ? /*#__PURE__*/React.createElement(\"input\", {\n    type: field.type,\n    name: field.name,\n    placeholder: field.placeholder,\n    required: true,\n    value: formValue.email,\n    onChange: handleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 33\n    }\n  }) : field.type === \"radio\" ? /*#__PURE__*/React.createElement(\"div\", {\n    key: field.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"d-f-label-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 41\n    }\n  }, field.label), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 41\n    }\n  }), field.options.map(option => /*#__PURE__*/React.createElement(\"label\", {\n    key: option.value,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: field.type,\n    name: field.name,\n    value: option.value,\n    onChange: handleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 49\n    }\n  }), option.label))) : field.type === \"checkbox\" ? /*#__PURE__*/React.createElement(\"div\", {\n    key: field.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"d-f-label-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 45\n    }\n  }, field.label), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 45\n    }\n  }), field.options.map(option => /*#__PURE__*/React.createElement(\"li\", {\n    key: option.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: field.type,\n    name: field.name,\n    value: option.value,\n    onChange: handleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 57\n    }\n  }), option.label)))) : field.type === \"select\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    key: field.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"d-f-label-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 53\n    }\n  }, field.label), /*#__PURE__*/React.createElement(\"select\", {\n    name: field.name,\n    value: formValue.status,\n    onChange: handleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 53\n    }\n  }, field.options.map(option => /*#__PURE__*/React.createElement(\"option\", {\n    key: option.value,\n    name: field.name,\n    value: option.value,\n    onChange: handleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 61\n    }\n  }, option.label)))), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 56\n    }\n  })) : null), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-lg\",\n    disabled: formValue.username.length === 0 || formValue.email.length === 0 || formValue.gender.length === 0 || formValue.interests.length === 0 || formValue.country.length === 0 || disable === 'submitted',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 22\n    }\n  }, \"Submit\"))));\n};\nexport default DynamicForm;","map":{"version":3,"names":["React","useEffect","useState","axios","Navbar","DynamicForm","FormInputData","setFormInputData","formValue","setFormValue","username","email","gender","interests","country","disable","setDisable","handleInput","e","name","value","type","checked","target","updatedInterests","push","index","indexOf","splice","handleSubmit","preventDefault","console","log","get","then","response","data","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","map","field","placeholder","required","onChange","key","label","options","option","status","disabled","length"],"sources":["E:/Files/AllData_ReactDashboard/src/Components/Forms/DynamicForm.jsx"],"sourcesContent":["\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Navbar from '../Pages/Navbar';\r\n\r\n\r\n\r\nconst DynamicForm = () => {\r\n    const [FormInputData, setFormInputData] = useState([]);\r\n    const [formValue, setFormValue] = useState({\r\n      username: '',\r\n      email: '',\r\n      gender: '',\r\n      interests: [],\r\n      country: '',\r\n    });\r\n    const [disable, setDisable] = useState('typing');\r\n\r\n    const handleInput = (e) => {\r\n        const { name, value, type, checked } = e.target;\r\n    \r\n        if (type === 'checkbox') {\r\n          const updatedInterests = [...formValue.interests];\r\n          if (checked) {\r\n            updatedInterests.push(value);\r\n          } else {\r\n            const index = updatedInterests.indexOf(value);\r\n            if (index !== -1) {\r\n              updatedInterests.splice(index, 1);\r\n            }\r\n          }\r\n    \r\n          setFormValue({ ...formValue, interests: updatedInterests });\r\n        } else {\r\n          setFormValue({ ...formValue, [name]: value });\r\n        }\r\n      };\r\n    \r\n      const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log('Form Value:', formValue);\r\n        setDisable('submitted');\r\n        // window.location.reload();\r\n      };\r\n    useEffect(() => {\r\n        \r\n            axios.get('https://dashboard-3frk.onrender.com/fields')\r\n                .then((response) => {\r\n                    setFormInputData(response.data);\r\n                })\r\n       \r\n\r\n    }, []);\r\n\r\n\r\n    return (\r\n\r\n        <><Navbar/>\r\n            <div>\r\n                <form onSubmit={  handleSubmit} className='Dynamic-form' >\r\n                    <h1> Form </h1>\r\n                    {FormInputData.map(field => (\r\n                        field.type === \"text\" ?\r\n                            <>\r\n                                <input  type={field.type} name={field.name} placeholder={field.placeholder} required value={formValue.username} onChange={ handleInput}/>\r\n                            </>\r\n                            : field.type === \"email\" ?\r\n                                <input  type={field.type} name={field.name} placeholder={field.placeholder} required value={formValue.email} onChange={ handleInput}/>\r\n                                :\r\n                                field.type === \"radio\" ?\r\n                                    <div key={field.name}>\r\n                                        <label className='d-f-label-main'>{field.label}</label>\r\n                                        <br />\r\n                                        {field.options.map(option => (\r\n                                            <label key={option.value} className=''>\r\n                                                <input\r\n                                                    type={field.type}\r\n                                                    name={field.name}\r\n                                                    value={option.value}\r\n                                                    onChange={ handleInput}\r\n                                                />\r\n                                                {option.label}\r\n                                            </label>\r\n                                        ))}\r\n                                    </div>\r\n                                    : field.type === \"checkbox\" ?\r\n                                        <div key={field.name}>\r\n                                            <label className='d-f-label-main'>{field.label}</label>\r\n                                            <br />\r\n                                            {field.options.map(option => (\r\n                                                <li key={option.value}>\r\n                                                    <label >\r\n                                                        <input type={field.type} name={field.name} value={option.value} onChange={ handleInput}/>\r\n                                                        {option.label}\r\n                                                    </label>\r\n                                                </li>\r\n                                            ))}\r\n                                        </div>\r\n                                        : field.type === \"select\" ?\r\n                                            <>\r\n                                                <div key={field.name}>\r\n                                                    <label className='d-f-label-main'>{field.label}</label>\r\n                                                    <select name={field.name} value={formValue.status} onChange={ handleInput}>\r\n                                                        {field.options.map(option => (\r\n                                                            <option key={option.value} name={field.name} value={option.value} onChange={ handleInput}>\r\n                                                                {option.label}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                </div> <br />\r\n                                            </>\r\n\r\n                                            : null\r\n\r\n                    ))}\r\n                     <button className=\"btn btn-lg\"\r\n                            disabled={formValue.username.length===0 || \r\n                                    formValue.email.length===0 || \r\n                                    formValue.gender.length===0 ||\r\n                                    formValue.interests.length===0 ||\r\n                                    formValue.country.length===0 ||\r\n                                    disable==='submitted'\r\n                            \r\n                            }\r\n                            \r\n                            >Submit</button>\r\n                </form>\r\n            </div>\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DynamicForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}