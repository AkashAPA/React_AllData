{"ast":null,"code":"var _jsxFileName = \"E:\\\\Files\\\\Dashboard\\\\src\\\\Components\\\\Timer\\\\TimerLoading.jsx\";\nimport React, { useState } from 'react';\nimport styles from './TimerLoading.module.css';\n// import ReactDOM from \"react-dom\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\nimport Navbar from '../Pages/Navbar';\nconst renderTime = ({\n  remainingTime\n}) => {\n  if (remainingTime === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.timer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 12\n      }\n    }, \"Too late...\");\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.timer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, \"Remaining\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, remainingTime), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"seconds\"));\n};\nconst options = [10, 20, 30, 40, 50];\nconst TimerLoading = () => {\n  const [selectedTime, setSelectedTime] = useState(10);\n  const [isTimerActive, setIsTimerActive] = useState(false);\n  const handleSelectChange = e => {\n    const newValue = parseInt(e.target.value);\n    setSelectedTime(newValue);\n    setIsTimerActive(false); // Stop the timer when a new value is selected\n  };\n\n  const handleResetClick = () => {\n    setIsTimerActive(true); // Start the timer when the \"Reset\" button is clicked\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.App,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.timer_wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CountdownCircleTimer, {\n    key: selectedTime // Add a key to the timer to force a re-render when selectedTime changes\n    ,\n    isPlaying: isTimerActive,\n    duration: selectedTime,\n    colors: [[\"#004777\", 0.33], [\"#F7B801\", 0.33], [\"#A30000\"]],\n    onComplete: () => setIsTimerActive(false) // Stop the timer when it completes\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, renderTime), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    value: selectedTime,\n    onChange: handleSelectChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, options.map(opt => /*#__PURE__*/React.createElement(\"option\", {\n    value: opt,\n    key: opt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, opt + \" sec\"))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleResetClick,\n    className: \"btn btn-danger mx-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Reset\")), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"Can you get this reset button to work?\"), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"The reset button should reset as per the time selected in the dropdown\"))));\n};\nexport default TimerLoading;","map":{"version":3,"names":["React","useState","styles","CountdownCircleTimer","Navbar","renderTime","remainingTime","createElement","className","timer","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","text","value","options","TimerLoading","selectedTime","setSelectedTime","isTimerActive","setIsTimerActive","handleSelectChange","e","newValue","parseInt","target","handleResetClick","Fragment","App","timer_wrapper","key","isPlaying","duration","colors","onComplete","style","display","onChange","map","opt","onClick"],"sources":["E:/Files/Dashboard/src/Components/Timer/TimerLoading.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styles from './TimerLoading.module.css'\r\n// import ReactDOM from \"react-dom\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\nimport Navbar from '../Pages/Navbar';\r\n\r\nconst renderTime = ({ remainingTime }) => {\r\n  if (remainingTime === 0) {\r\n    return <div className={styles.timer}>Too late...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.timer}>\r\n      <div className={styles.text}>Remaining</div>\r\n      <div className={styles.value}>{remainingTime}</div>\r\n      <div className={styles.text}>seconds</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst options = [10, 20, 30, 40, 50];\r\nconst TimerLoading = () => {\r\n  const [selectedTime, setSelectedTime] = useState(10);\r\n  const [isTimerActive, setIsTimerActive] = useState(false);\r\n\r\n  const handleSelectChange = (e) => {\r\n    const newValue = parseInt(e.target.value);\r\n    setSelectedTime(newValue);\r\n    setIsTimerActive(false); // Stop the timer when a new value is selected\r\n  };\r\n\r\n  const handleResetClick = () => {\r\n    setIsTimerActive(true); // Start the timer when the \"Reset\" button is clicked\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className={styles.App}>\r\n\r\n        <div className={styles.timer_wrapper}>\r\n          <CountdownCircleTimer\r\n            key={selectedTime} // Add a key to the timer to force a re-render when selectedTime changes\r\n            isPlaying={isTimerActive}\r\n            duration={selectedTime}\r\n            colors={[[\"#004777\", 0.33], [\"#F7B801\", 0.33], [\"#A30000\"]]}\r\n            onComplete={() => setIsTimerActive(false)} // Stop the timer when it completes\r\n          >\r\n            {renderTime}\r\n          </CountdownCircleTimer>\r\n          <div style={{ display: \"flex\" }}>\r\n            <select value={selectedTime} onChange={handleSelectChange}>\r\n              {options.map((opt) => (\r\n                <option value={opt} key={opt}>\r\n                  {opt + \" sec\"}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <button onClick={handleResetClick} className='btn btn-danger mx-2'>Reset</button>\r\n          </div>\r\n          <h3>Can you get this reset button to work?</h3>\r\n          <h4>The reset button should reset as per the time selected in the dropdown</h4>\r\n        </div>\r\n      </div>\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default TimerLoading;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}